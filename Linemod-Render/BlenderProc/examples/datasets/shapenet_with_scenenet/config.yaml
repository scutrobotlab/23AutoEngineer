# Args: <obj_file> <texture_file> <path_to_shape-net-core> <output_dir>
{
  "version": 3,
  "setup": {
    "blender_install_path": "/home_local/<env:USER>/blender/",
    "pip": [
      "h5py"
    ]
  },
  "modules": [
    {
      "module": "main.Initializer",
      "config":{
        "global": {
          "output_dir": "<args:3>"
        }
      }
    },
    {
      "module": "loader.SceneNetLoader",
      "config": {
        # after downloading the scenenet dataset it should be located inside of resources/scenenet/SceneNetData/
        "file_path": "<args:0>",
        "texture_folder": "<args:1>",
        "add_properties": {
          "cp_physics": False
        }
      }
    },
    {
      "module": "object.FloorExtractor",
      "config": {
        "selector": {
          "provider": "getter.Entity",
          "conditions": {
            "cp_category_id": 1
          }
        }, # this one you need to now beforehand
        "compare_angle_degrees" : 7.5,
        "compare_height": 0.15,
        "name_for_split_obj": "floor",  # this is the new name of the object
        "add_properties": {
          "cp_category_id": 2
        },
        "should_skip_if_object_is_already_there": True
      }
    },
    {
      "module": "object.FloorExtractor",
      "config": {
        "selector": {
          "provider": "getter.Entity",
          "conditions": {
            "cp_category_id": 1
          }
        },
        "up_vector_upwards": False,  # the polygons are now facing downwards: [0, 0, -1]
        "compare_angle_degrees": 7.5,
        "compare_height": 0.15,
        "add_properties": {
          "cp_category_id": 22
        },
        "name_for_split_obj": "ceiling",
        "should_skip_if_object_is_already_there": True
      }
    },
    {
      "module": "lighting.SurfaceLighting",
      "config": {
        "selector": {
          "provider": "getter.Entity",
          "check_empty": True,
          "conditions": {
            "name": ".*[l|L]amp.*"
          }
        },
        "emission_strength": 15.0
      }
    },
    {
      "module": "lighting.SurfaceLighting",
      "config": {
        "selector": {
          "provider": "getter.Entity",
          "check_empty": True,
          "conditions": {
            "name": ".*[c|C]eiling.*"
          }
        },
        "emission_strength": 2.0,
        "emission_color": [1, 1, 1, 1]
      }
    },
    {
      "module": "loader.ShapeNetLoader",
      "config": {
        "data_path": "<args:2>",
        "used_synset_id": "02801938",
        "add_properties": {
          "cp_shape_net_object": True,
          # set the custom property physics to True
          "cp_physics": True
        }
      }
    },
    {
      "module": "manipulators.EntityManipulator",
      "config": {
        # get all shape net objects, as we have only loaded one this returns only one entity
        "selector": {
          "provider": "getter.Entity",
          "conditions": {
            "cp_shape_net_object": True,
            "type": "MESH"
          }
        },
        # Sets the location of this entity above a bed
        "location": {
          "provider": "sampler.UpperRegionSampler",
          "min_height": 0.3,
          "to_sample_on": {
              "provider": "getter.Entity",
              "conditions": {
                "cp_category_id": 4, # 4 is the category of the bed
                "type": "MESH"
              }

          }
        },
        # by adding a modifier we avoid that the objects falls through other objects during the physics simulation
        "cf_add_modifier": {
          "name": "Solidify",
          "thickness": 0.0025
        }
      }
    },
    {
      "module": "object.PhysicsPositioning",
      "config": {
        "solver_iters": 30,
        "substeps_per_frame": 40,
        "min_simulation_time": 0.5,
        "max_simulation_time": 4,
        "check_object_interval": 0.25,
        "mass_scaling": True,
        "mass_factor": 2000,
        "collision_margin": 0.00001,
        "collision_shape": "MESH"
      }
    },
    {
      "module": "camera.CameraSampler",
      "config": {
        "cam_poses": [
        {
          "number_of_samples": 5,
          "proximity_checks": {
            "min": 0.5
          },
          "check_if_objects_visible": {
            "provider": "getter.Entity",
            "conditions": {
              "cp_shape_net_object": True,
              "type": "MESH"
            }
          },
          "location": {
            "provider":"sampler.PartSphere",
            "center": {
              "provider": "getter.POI",
              "selector": {
                "provider": "getter.Entity",
                "conditions": {
                  "cp_shape_net_object": True,
                  "type": "MESH"
                }
              }
            },
            "distance_above_center": 0.5,
            "radius": 2,
            "mode": "SURFACE"
          },
          "rotation": {
            "format": "look_at",
            "value": {
              "provider": "getter.POI",
              "selector": {
                "provider": "getter.Entity",
                "conditions": {
                  "cp_shape_net_object": True,
                  "type": "MESH"
                }
              }
            }
          }
        }
        ]
      }
    },
    {
      "module": "renderer.RgbRenderer",
      "config": {
        "output_key": "colors",
        "samples": 150,
        "render_distance": True,
        "render_normals": True
      }
    },
    {
      "module": "writer.Hdf5Writer",
      "config": {
        "postprocessing_modules": {
          "distance": [
          {
            "module": "postprocessing.TrimRedundantChannels",
          }
          ]
        }
      }
    }
  ]
}
